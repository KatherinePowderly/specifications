version: 1
style: unit
tests:
  - description: must have an ID number associated with it.
    operations:
      - command: createPool
        returnTo: pool
      - command: acquire
        object: pool
        returnTo: conn1
      - command: acquire
        object: pool
        returnTo: conn2
    events:
      - type: connectionPoolQueueEntered
      - type: connectionCreated
        connection:
          id: { $$ref: [ "conn1", "id" ] }
      - type: connectionPoolAcquire
        connection:
          id: { $$ref: [ "conn1", "id" ] }
      - type: connectionPoolQueueEntered
      - type: connectionCreated
        connection:
          id: { $$ref: [ "conn2", "id" ] }
      - type: connectionPoolAcquire
        connection:
          id: { $$ref: [ "conn2", "id" ] }
    ignore:
      - connectionPoolCreated
      - connectionPoolDestroyed
  - description: must have IDs assigned in order of creation.
    operations:
      - command: createPool
        returnTo: pool
      - command: acquire
        object: pool
        returnTo: conn1
      - command: acquire
        object: pool
        returnTo: conn2
    events:
      - type: connectionPoolQueueEntered
      - type: connectionCreated
        connection:
          id: 0
      - type: connectionPoolAcquire
        connection:
          id: 0
      - type: connectionPoolQueueEntered
      - type: connectionCreated
        connection:
          id: 1
      - type: connectionPoolAcquire
        connection:
          id: 1
    ignore:
      - connectionPoolCreated
      - connectionPoolDestroyed
  - description: must have a generation number that reflects pool generation when connection was created
    operations:
      - command: createPool
        returnTo: pool
      # Clears the pool twice to ensure that generation is 2
      - command: clear
        object: pool
      - command: clear
        object: pool
      # Acquire a connection
      - command: acquire
        object: pool
        returnTo: conn
      # Clear the pool, increasing that generation to 3
      - command: clear
        object: pool
      # Release connection, generation should still be 2
      - command: release
        object: pool
        args: [ { $$ref: ["conn"] } ]
    events:
      - type: connectionPoolCleared
        pool:
          generation: 1
      - type: connectionPoolCleared
        pool:
          generation: 2
      - type: connectionCreated
        connection:
          id: 0
          generation: 2
        pool:
          generation: 2
      - type: connectionPoolAcquire
        connection:
          id: 0
          generation: 2
        pool:
          generation: 2
      - type: connectionPoolCleared
        pool:
          generation: 3
      - type: connectionPoolRelease
        connection:
          id: 0
          generation: 2
        pool:
          generation: 3
    ignore:
      - connectionPoolQueueEntered
      - connectionPoolCreated
      - connectionPoolDestroyed